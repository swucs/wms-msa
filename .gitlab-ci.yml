stages:
  - build
  - dockerize
  - deploy

build-discovery-server:
  stage: build
  script:
    - cd discovery-server
    - mvn clean compile package -DskipTests=true
  artifacts:
    paths:
      - discovery-server/target/shinyoung-discovery-server.jar
    expire_in: 1 week
  only:
    - main
  tags:
    - build

dockerize-discovery-server:
  stage: dockerize
  script:
    - docker build -f discovery-server/Dockerfile --build-arg MODULE=discovery-server --tag registry.sungbae.net/shinyoung/wms/sy-discovery-server:$CI_PIPELINE_IID .
    - docker push registry.sungbae.net/shinyoung/wms/sy-discovery-server:$CI_PIPELINE_IID
    - docker rmi registry.sungbae.net/shinyoung/wms/sy-discovery-server:$CI_PIPELINE_IID
  only:
    - main
  tags:
    - dockerize
  needs: [build-discovery-server]


deploy-discovery-server:
  stage: deploy
  script:
    - ssh angryant@172.30.1.32 "docker pull registry.sungbae.net/shinyoung/wms/sy-discovery-server:$CI_PIPELINE_IID"
    - ssh angryant@172.30.1.32 "docker ps -q --filter name="discovery-server" | xargs -r docker stop"
    - ssh angryant@172.30.1.32 "docker image prune -a -f"
    - ssh angryant@172.30.1.32 "docker run -d -p 8761:8761 --network shinyoung-network --name sy-discovery-server --rm registry.sungbae.net/shinyoung/wms/sy-discovery-server:$CI_PIPELINE_IID "
  only:
    - master
  tags:
    - deploy
  needs: [dockerize-discovery-server]
  when: manual
